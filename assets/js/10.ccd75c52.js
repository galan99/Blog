(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{277:function(v,_,i){"use strict";i.r(_);var l=i(13),n=Object(l.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"浏览器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器"}},[v._v("#")]),v._v(" 浏览器")]),v._v(" "),_("ul",[_("li",[v._v("浏览器主要有哪些线程？ ✔️\n")]),v._v(" "),_("li",[v._v("JS执行进程和渲染进程可以同时进行吗？为什么？ ✔️\n")]),v._v(" "),_("li",[v._v("浏览器为什么是单线程 异步？ ✔️\n")]),v._v(" "),_("li",[v._v("v8 是如何执行一段 JS 代码的?\n")]),v._v(" "),_("li",[v._v("V8引擎在编译和解析代码的时候有做哪些优化？\n")])]),v._v(" "),_("h2",{attrs:{id:"同源策略"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#同源策略"}},[v._v("#")]),v._v(" 同源策略")]),v._v(" "),_("ul",[_("li",[v._v("什么是同源策略？什么是跨域问题？ ✔️\n")]),v._v(" "),_("li",[v._v("localhost:3000 与 localhost:5000 的 cookie 信息是否共享？ ✔️\n")]),v._v(" "),_("li",[v._v("如何解决跨域问题？✔️\n")]),v._v(" "),_("li",[v._v("预请求是什么？什么情况下会发送？✔️\n")]),v._v(" "),_("li",[v._v("为什么要发这个预请求？也就是options请求 ✔️\n")])]),v._v(" "),_("h2",{attrs:{id:"渲染机制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#渲染机制"}},[v._v("#")]),v._v(" 渲染机制")]),v._v(" "),_("ul",[_("li",[v._v("浏览器中输入URL之后发生了什么？ ✔️\n")]),v._v(" "),_("li",[v._v("浏览器渲染页面的过程是怎样的？ ✔️\n")]),v._v(" "),_("li",[v._v("什么是回流与重绘？如何优化？？ ✔️\n")]),v._v(" "),_("li",[v._v("dom 树和 render 树节点是否一一对应？\n")]),v._v(" "),_("li",[v._v("怎么判断页面是否加载完成？ ✔️\n")])]),v._v(" "),_("h2",{attrs:{id:"内存管理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#内存管理"}},[v._v("#")]),v._v(" 内存管理")]),v._v(" "),_("ul",[_("li",[v._v("什么是栈内存，堆内存？ ✔️\n")]),v._v(" "),_("li",[v._v("什么时候会回收内存？ ✔️\n")]),v._v(" "),_("li",[v._v("浏览器引擎是怎么进行垃圾回收的? ✔️\n")]),v._v(" "),_("li",[v._v("如何检测内存泄漏? ✔️\n")]),v._v(" "),_("li",[v._v("闭包算内存泄漏吗? ✔️\n")]),v._v(" "),_("li",[v._v("Map 与 WeakMap 有何区别? ✔️\n")]),v._v(" "),_("li",[v._v("Vue中哪些场景下会发生内存泄漏? ✔️\n")])]),v._v(" "),_("h2",{attrs:{id:"缓存机制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#缓存机制"}},[v._v("#")]),v._v(" 缓存机制")]),v._v(" "),_("ul",[_("li",[v._v("浏览器的缓存机制有哪些？有什么区别？ ✔️\n"),v._v(" "),_("ul",[_("li",[v._v("浏览器的缓存机制根据什么来判断的？ ✔️\n")]),v._v(" "),_("li",[v._v("etag 是怎么生成的?")]),v._v(" "),_("li",[v._v("etag 不同，内容一定不同吗？ ✔️\n")]),v._v(" "),_("li",[v._v("计算整个文件得到 etag 会耗费性能，怎么解决？")]),v._v(" "),_("li",[v._v("Last-Modified是怎么生成的？ ✔️\n")]),v._v(" "),_("li",[v._v("If-None-Match和If-Modified-Since是什么？ ✔️\n")]),v._v(" "),_("li",[v._v("强缓存一般存放在哪里？")]),v._v(" "),_("li",[v._v("如果我不想要使用缓存了，每次都请求最新的，怎么做？no-store 和 no-cache 的区别是什么？ ✔️\n")]),v._v(" "),_("li",[v._v("如何选择合适的缓存策略？\n")])])]),v._v(" "),_("li",[v._v("为什么每种缓存机制有两套方案？ ✔️\n")]),v._v(" "),_("li",[v._v("离线缓存是什么？ ✔️\n"),v._v(" "),_("ul",[_("li",[v._v("如何判断用户是否处于离线状态? ✔️\n")])])])]),v._v(" "),_("h2",{attrs:{id:"存储机制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#存储机制"}},[v._v("#")]),v._v(" 存储机制")]),v._v(" "),_("ul",[_("li",[v._v("浏览器的存储机制有哪些？有什么区别？ ✔️\n")]),v._v(" "),_("li",[v._v("token 放 Cookie 还是 LocalStorage？")]),v._v(" "),_("li",[v._v("Cookie\n"),v._v(" "),_("ul",[_("li",[v._v("如何增加一个cookie? ✔️\n")]),v._v(" "),_("li",[v._v("如何删除一个cookie?\n")]),v._v(" "),_("li",[v._v("前端可以设置cookie吗？ ✔️\n")]),v._v(" "),_("li",[v._v("当 cookie 没有设置 maxage 时，cookie 会存在多久? ✔️\n")]),v._v(" "),_("li",[v._v("浏览器中 cookie 有哪些字段? ✔️\n")])])])]),v._v(" "),_("h2",{attrs:{id:"eventloop"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#eventloop"}},[v._v("#")]),v._v(" EventLoop")]),v._v(" "),_("ul",[_("li",[v._v("什么 EventLoop？ ✔️\n")]),v._v(" "),_("li",[v._v("什么是宏任务和微任务？ ✔️\n")]),v._v(" "),_("li",[v._v("微任务和宏任务的区分标准是什么？ ✔️\n")]),v._v(" "),_("li",[v._v("Node中的EventLoop有什么不同？ ✔️\n")])])])}),[],!1,null,null,null);_.default=n.exports}}]);